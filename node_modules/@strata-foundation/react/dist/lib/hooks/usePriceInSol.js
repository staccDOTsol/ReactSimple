"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.usePriceInSol = void 0;
const useSolPrice_1 = require("./useSolPrice");
const bondingPricing_1 = require("./bondingPricing");
const spl_token_1 = require("@solana/spl-token");
const react_1 = require("react");
const useTwWrappedSolMint_1 = require("./useTwWrappedSolMint");
function usePriceInSol(token) {
    const solPrice = (0, useSolPrice_1.useSolPrice)();
    const { pricing, tokenBonding } = (0, bondingPricing_1.useBondingPricingFromMint)(token);
    const [price, setPrice] = (0, react_1.useState)();
    const wrappedSolMint = (0, useTwWrappedSolMint_1.useTwWrappedSolMint)();
    (0, react_1.useEffect)(() => {
        if ((token === null || token === void 0 ? void 0 : token.equals(spl_token_1.NATIVE_MINT)) ||
            (wrappedSolMint && (token === null || token === void 0 ? void 0 : token.equals(wrappedSolMint)))) {
            setPrice(1);
        }
        else if (pricing) {
            try {
                setPrice(wrappedSolMint && (pricing === null || pricing === void 0 ? void 0 : pricing.current(wrappedSolMint)));
            }
            catch (e) {
                console.warn(`Token ${token} cannot be priced in terms of SOL`);
            }
        }
    }, [token, solPrice, pricing, tokenBonding]);
    return price;
}
exports.usePriceInSol = usePriceInSol;
//# sourceMappingURL=usePriceInSol.js.map
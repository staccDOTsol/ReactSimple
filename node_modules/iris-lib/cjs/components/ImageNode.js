'use strict';

exports.__esModule = true;

var _templateObject = _taggedTemplateLiteralLoose(['\n      <input\n        type="text"\n        value=', '\n        placeholder=', '\n        onInput=', '\n        disabled=', ' />\n    '], ['\n      <input\n        type="text"\n        value=', '\n        placeholder=', '\n        onInput=', '\n        disabled=', ' />\n    ']),
    _templateObject2 = _taggedTemplateLiteralLoose(['\n      <', ' ref=', ' contenteditable=', ' placeholder=', ' onInput=', '>\n        ', '\n      </', '>\n    '], ['\n      <', ' ref=', ' contenteditable=', ' placeholder=', ' onInput=', '>\n        ', '\n      </', '>\n    ']),
    _templateObject3 = _taggedTemplateLiteralLoose(['<img style=', ' onClick=', ' src=', ' ...', '/>'], ['<img style=', ' onClick=', ' src=', ' ...', '/>']),
    _templateObject4 = _taggedTemplateLiteralLoose(['<button class=', ' onClick=', '>Add image</button>'], ['<button class=', ' onClick=', '>Add image</button>']),
    _templateObject5 = _taggedTemplateLiteralLoose(['\n      <span>\n        <input name="profile-photo-input" type="file" style="display:none;" onChange=', ' accept="image/*"/>\n        ', '\n      </span>\n    '], ['\n      <span>\n        <input name="profile-photo-input" type="file" style="display:none;" onChange=', ' accept="image/*"/>\n        ', '\n      </span>\n    ']);

var _preactCustomElement = require('preact-custom-element');

var _preactCustomElement2 = _interopRequireDefault(_preactCustomElement);

var _preact = require('htm/preact');

var _util = require('../util');

var _util2 = _interopRequireDefault(_util);

var _TextNode2 = require('./TextNode');

var _TextNode3 = _interopRequireDefault(_TextNode2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteralLoose(strings, raw) { strings.raw = raw; return strings; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var toBase64 = function toBase64(file) {
  return new Promise(function (resolve, reject) {
    var reader = new FileReader();
    reader.readAsDataURL(file);
    reader.onload = function () {
      return resolve(reader.result);
    };
    reader.onerror = function (error) {
      return reject(error);
    };
  });
};

var ImageNode = function (_TextNode) {
  _inherits(ImageNode, _TextNode);

  function ImageNode() {
    _classCallCheck(this, ImageNode);

    return _possibleConstructorReturn(this, _TextNode.apply(this, arguments));
  }

  ImageNode.prototype.getValue = function getValue(user) {
    var _this2 = this;

    this.getNode(user).on(function (value, a, b, e) {
      _this2.eventListeners[_this2.path] = e;
      _this2.setState({ value: value });
    });
  };

  ImageNode.prototype.onChange = async function onChange(e) {
    var file = e.target.files[0];
    var data = await toBase64(file);
    this.getNode().put(data);
  };

  ImageNode.prototype.renderInput = function renderInput() {
    var _this3 = this;

    return (0, _preact.html)(_templateObject, this.state.value, this.props.placeholder || this.path, function (e) {
      return _this3.onInput(e);
    }, !this.isEditable());
  };

  ImageNode.prototype.renderTag = function renderTag() {
    var _this4 = this;

    var placeholder = this.props.placeholder || this.props.path;
    var tag = this.props.tag || 'span';
    return (0, _preact.html)(_templateObject2, tag, this.ref, this.isEditable(), placeholder, function (e) {
      return _this4.onInput(e);
    }, this.state.value, tag);
  };

  ImageNode.prototype.onClick = function onClick() {
    if (this.isEditable()) {
      this.base.firstChild.click();
    }
  };

  ImageNode.prototype.render = function render() {
    var _this5 = this;

    var editable = this.isEditable();
    var val = this.state.value;
    var src = val && val.indexOf('data:image') === 0 ? val : this.props.placeholder;
    var _props = this.props,
        alt = _props.alt,
        width = _props.width,
        height = _props.height;

    var el = void 0;
    if (src) {
      var style = editable ? 'cursor: pointer;' : '';
      el = (0, _preact.html)(_templateObject3, style, function (e) {
        return _this5.onClick(e);
      }, val, { alt: alt, width: width, height: height });
    } else if (editable) {
      el = (0, _preact.html)(_templateObject4, this.props['btn-class'], function (e) {
        return _this5.onClick(e);
      });
    }
    return (0, _preact.html)(_templateObject5, function (e) {
      return _this5.onChange(e);
    }, el);
  };

  return ImageNode;
}(_TextNode3.default);

!_util2.default.isNode && (0, _preactCustomElement2.default)(ImageNode, 'iris-img', ['path', 'user', 'placeholder', 'editable', 'alt', 'width', 'height']);

exports.default = ImageNode;
module.exports = exports['default'];